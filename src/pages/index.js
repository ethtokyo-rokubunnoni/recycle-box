import Head from 'next/head';
import React, { useState, useEffect } from 'react';
import {
  Flex,
  Box,
  Stack,
  Heading,
  Image,
  useMediaQuery,
} from '@chakra-ui/react';
import { useAccount } from 'wagmi';
import { Balances } from '@/componets/balance';

export default function Home() {
  const { isConnected } = useAccount();
  const [headerText, setHeaderText] = useState("Clean out your wallet!");
  const [hideChecked, setHideChecked] = useState(false);

  useEffect(() => {
    if (isConnected) {
      setHeaderText("Oops!! You have many small amount of tokens!!");
      setHideChecked(false);
    } else {
      setHeaderText("Clean out your wallet!");
      setHideChecked(false);
    }
  }, [isConnected]);

  const onModalActionCompleted = () => {
    setModalHeaderText("Recycling Completed");
    setHideChecked(true);
  };

  const onCheckedTokensChange = () => {
	console.log("Checked tokens have been changed.");
  };

  const [isLargerThan480] = useMediaQuery('(max-width: 481px)');
  const [isLargerThan768] = useMediaQuery('(min-width: 769px)');
  const imageSize = isLargerThan768 ? '60%' : isLargerThan480 ? '40%' : '20%';

  return (
    <>
      <Head>
        <title>Mottainai Recycle</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        align="center"
        justify="center"
        // bg={useColorModeValue("gray.50", "gray.800")}
        h="30vh"
        w="100vw"
      >
        <Box textAlign="center" maxW="xl" mt="10%">
          <Stack spacing={6} align="center">
            <Image src="/assets/mottainai.png" alt="Logo" boxSize={imageSize} mb="-6" />
            <Heading fontSize="4xl">{headerText}</Heading>
            <Box fontSize="lg" mt="4">
				<Balances
					isConnected={isConnected}
					onModalActionCompleted={onModalActionCompleted}
					hideChecked={hideChecked}
					setHeaderText={setHeaderText}
					onCheckedTokensChange={onCheckedTokensChange}
				/>
				</Box>
          </Stack>
        </Box>
      </Flex>
    </>
  );
}
